# Install SCDRM
---
- name: Create dirs
  become: true
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  with_items:
    - /var/log/scdrm
    - /etc/scdrm
    - /scdrm

- name: Install dependencies
  become: true
  package:
    name:
      - git
      - ksh
    state: present

- name: Check network service
  become: true
  command: systemctl is-active network.service
  failed_when: false
  changed_when: false
  register: networkcheck
  when: '"el" in release.stdout'

- name: Check NetworkManager service
  become: true
  command: systemctl is-active NetworkManager.service
  failed_when: false
  changed_when: false
  when: '"el" in release.stdout'
  register: nmcheck

- name: Check networking service
  become: true
  command: systemctl is-active networking.service
  failed_when: false
  changed_when: false
  register: networkingcheck
  when: '"Debian" in distro.stdout'

- name: Check systemd-networkd.service
  become: true
  command: systemctl is-active systemd-networkd.service
  failed_when: false
  changed_when: false
  register: sysdnetcheck
  when: '"Ubuntu" in distro.stdout'

- name: Set fact
  set_fact:
    netservice: network
  when:
    - '"el" in release.stdout'
    - networkcheck is defined
    - networkcheck.stdout == "active"

- name: Set fact
  set_fact:
    netservice: NetworkManager
  when:
    - '"el" in release.stdout'
    - nmcheck is defined
    - nmcheck.stdout == "active"

- name: Set fact
  set_fact:
    netservice: networking
  when:
    - '"Debian" in distro.stdout'
    - networkingcheck is defined
    - networkingcheck.stdout == "active"

- name: Set fact
  set_fact:
    netservice: systemd-networkd
  when:
    - '"Ubuntu" in distro.stdout'
    - sysdnetcheck is defined
    - sysdnetcheck.stdout == "active"

- name: Copy scdrmd
  become: true
  template:
    src: ../files/check.j2
    dest: /usr/local/sbin/scdrmd
    mode: 0750
    owner: root
    group: root
    attributes: +i

- name: Copy scdrm.conf
  become: true
  template:
    src: ../files/scdrm.j2
    dest: /etc/scdrm/scdrm.conf
    mode: 0755
    owner: root
    group: root
    attributes: +i

- name: Copy scdrm-paranoid
  become: true
  template:
    src: ../files/paranoid.j2
    dest: /usr/local/sbin/scdrm-paranoid
    mode: 0755
    owner: root
    group: root
    attributes: +i

- name: Copy gitignore EL
  become: true
  copy:
    src: ../files/gitignore
    dest: "{{ item }}/.gitignore"
    mode: 0640
    owner: root
    attributes: +i
  with_items: "{{ dirlist_el }}"
  when: '"el" in release.stdout'

- name: Copy gitignore Deb
  become: true
  copy:
    src: ../files/gitignore
    dest: "{{ item }}/.gitignore"
    mode: 0640
    owner: root
    attributes: +i
  with_items: "{{ dirlist_deb }}"
  when: '"el" not in release.stdout'

- name: Copy installer
  become: true
  copy:
    content: |
      {{ shebang }}
      if [[ -s {{ scdrm_conf }} ]]
      then . {{ scdrm_conf }}
      else
      printf 'Configuration file missing. Exiting...\n'
      exit 1
      fi

      {% if "el" in release.stdout %}
      for DIRECTORY in {{ dirlist_el | join(' ') }}
      {% else %}
      for DIRECTORY in {{ dirlist_deb | join(' ') }}
      {% endif %}
      do
          if [[ -d ${DIRECTORY}/.git ]]
          then printf "Git already configured for $DIRECTORY. Exiting...\n"
          exit 1
          fi

      # Install SCDRM
      printf "Starting installation on $(date '+%F-%T')\n" | tee -a $SCDRMILOG > $SCDRMDLOG
      cd $DIRECTORY > /dev/null
      git init . >> $SCDRMILOG 2>>$SCDRMELOG
      git add . >> $SCDRMILOG 2>>$SCDRMELOG
      git config user.email "scdrm@localhost.localdomain"
      git config user.name "SCDRM"
      git config --global --add safe.directory '*'
      git commit -a -m "Installation commit" >> $SCDRMILOG 2>>$SCDRMELOG

      done

      /bin/rm -f /usr/local/sbin/scdrm-install > /dev/null
      chattr -R +i /etc/scdrm /usr/local/sbin/scdrm* /usr/local/sbin/adminst* /usr/local/bin/adminstart 2>/dev/null
      exit 0
    dest: /usr/local/sbin/scdrm-install
    mode: 0750
    owner: root
    group: root

- name: Copy cron-check
  become: true
  template:
    src: ../files/scdrm-slow.j2
    dest: /usr/local/sbin/scdrm-slow
    mode: '0750'
    owner: root
    group: root
    attributes: +i

- name: Copy fast-check
  become: true
  template:
    src: ../files/scdrm-fast.j2
    dest: /usr/local/sbin/scdrm-fast
    mode: 0750
    owner: root
    group: root
    attributes: +i

- name: Copy GitGC cron
  become: true
  template:
    src: ../files/cron-git.j2
    dest: /usr/local/sbin/scdrm-gitcron
    mode: 0750
    owner: root
    group: root
    attributes: +i

- name: Copy bash-guard
  become: true
  template:
    src: ../files/bash_guard.j2
    dest: /usr/local/sbin/bash-guard
    mode: 0750
    owner: root
    group: root
    attributes: +i

- name: Copy scdrm-service-restart
  become: true
  template:
    src: ../files/scdrm-service-restart.j2
    dest: /usr/local/sbin/scdrm-service-restart
    mode: 0750
    owner: root
    group: root
    attributes: +i

- name: Setup SCDRM service
  become: true
  copy:
    content: |
      [Unit]
      Description=Security/Change/Disaster-Recovery Manager daemon
      Conflicts=shutdown.target

      [Service]
      Type=simple
      ExecStart=/usr/local/sbin/scdrmd
      Restart=always
      RestartSec=30s
      
      [Install]
      WantedBy=basic.target
    dest: /etc/systemd/system/scdrm.service
    mode: 0644
    owner: root
    group: root
    attributes: +i

- name: Setup SCDRM slow check timer
  become: true
  copy:
    content: |
      [Unit]
      Description=SCDRM slow check every hour minutes

      [Timer]
      OnCalendar=*:00
      RandomizedDelaySec=40m
      AccuracySec=1us

      [Install]
      WantedBy=timers.target
    dest: /etc/systemd/system/scdrm-slow-check.timer
    mode: 0644
    owner: root
    group: root
    attributes: +i

- name: Setup SCDRM-slow check service
  become: true
  copy:
    content: |
      [Unit]
      Description=SCDRM slow check

      [Service]
      Type=oneshot
      ExecStart=/usr/local/sbin/scdrm-slow

      [Install]
      WantedBy=scdrm.service
    dest: /etc/systemd/system/scdrm-slow-check.service
    mode: 0644
    owner: root
    group: root
    attributes: +i

- name: Setup Git GC cron
  cron:
    name: "SCDRM Git GC"
    minute: "16"
    hour: "16"
    day: "1"
    job: /usr/local/sbin/scdrm-gitcron
    user: root
    state: present

- name: Setup bash_guard cron
  cron:
    name: "SCDRM bash-guard"
    minute: "23"
    job: /usr/local/sbin/bash-guard
    user: root
    state: present

- name: Copy logrotate
  become: true
  copy:
    src: ../files/logrotate
    dest: /etc/logrotate.d/scdrm
    mode: 0644
    owner: root

- name: Download emergency restore RPMs
  become: true
  shell: yum reinstall --downloadonly --downloaddir=/scdrm rpm glibc coreutils bash -y
  args:
    executable: /bin/bash
  when: '"el" in release.stdout'

- name: Download emergency restore DPKGs
  become: true
  shell:
    cmd: apt-get download dpkg libc6 libc-bin coreutils bash -y
    chdir: /scdrm
  args:
    executable: /bin/bash
  when: '"Debian" in distro.stdout or "Ubuntu" in distro.stdout'

- name: Create directory
  become: true
  file:
    path: /etc/motd.d
    state: directory
    mode: 0755

- name: Copy MOTD
  become: true
  copy:
    src: ../files/motd
    dest: /etc/motd.d/scdrm
    mode: 0644
    owner: root
    group: root
  when: set_motd is true

- name: Run the installer
  become: true
  command: /usr/local/sbin/scdrm-install
  register: installer
  changed_when: true
  failed_when: installer.rc != 0

- name: Remove installer
  file:
    path: /usr/local/sbin/scdrm-install
    state: absent
  when: installer is failed

- name: Start SCDRM stack
  systemd:
    name: "{{ item }}"
    enabled: true
    state: started
    daemon_reload: true
  with_items:
    - scdrm.service
    - scdrm-slow-check.service
    - scdrm-slow-check.timer
...
