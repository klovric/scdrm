# Check Git commits against recorded values and revert when not a match
---
- name: Get commits for managed dirs EL
  become: true
  shell:
    chdir: "{{ item }}"
    cmd: git log | head -3 | awk '/commit/ {print $2}'
  args:
    executable: /bin/bash
  register: elgitcommit
  with_items:
    - "{{ dirlist_el }}"
  when: '"el" in release.stdout'

- name: Get commits for managed dirs Deb
  become: true
  shell:
    chdir: "{{ item }}"
    cmd: git log | head -3 | awk '/commit/ {print $2}'
  args:
    executable: /bin/bash
  register: debgitcommit
  with_items:
    - "{{ dirlist_deb }}"
  when: '"el" not in release.stdout'

- name: Compare commits EL
  become: false
  shell: "echo {{ item.0 }} {{ item.1 }} | grep {{ item.2 }}"
  register: elcompare
  changed_when: false
  delegate_to: localhost
  with_together:
    - "{{ elgitcommit | json_query('results[*].item') }}"
    - "{{ elgitcommit | json_query('results[*].stdout') }}"
    - "{{ last_commit }}"
  when: '"el" in release.stdout'

- name: Compare commits Deb
  become: false
  shell: "echo {{ item.0 }} {{ item.1 }} | grep {{ item.2 }}"
  register: debcompare
  changed_when: false
  delegate_to: localhost
  with_together:
    - "{{ debgitcommit | json_query('results[*].item') }}"
    - "{{ debgitcommit | json_query('results[*].stdout') }}"
    - "{{ last_commit }}"
  when: '"el" not in release.stdout'

- name: Set facts elgood
  set_fact:
    elgood: "{{ elcompare | json_query('results[*].rc') }}"
  when: '"el" in release.stdout'

- name: Set facts debgood
  set_fact:
    debgood: "{{ debcompare | json_query('results[*].rc') }}"
  when: '"el" not in release.stdout'

- meta: end_host
  when:
    - '"el" not in release.stdout'
    - debgood == [0, 0, 0]

- meta: end_host
  when:
    - '"el" in release.stdout'
    - elgood == [0, 0, 0]
 
- name: Prepare reverting commit EL
  become: false
  shell: echo "{{ item.cmd }}" | awk '{print "cd",$2" ; git reset --hard",$6}'
  args:
    executable: /bin/bash
  register: elreverting
  delegate_to: localhost
  changed_when: false
  with_items: "{{ elcompare | json_query('results[*]') }}"
  when:
    - '"el" in release.stdout'
    - item.rc == 1

- name: Prepare reverting commit Deb
  become: false
  shell: echo "{{ item.cmd }}" | awk '{print "cd",$2" ; git reset --hard",$6}'
  args:
    executable: /bin/bash
  register: debreverting
  delegate_to: localhost
  changed_when: false
  with_items: "{{ debcompare | json_query('results[*]') }}"
  when:
    - '"el" not in release.stdout'
    - item.rc == 1

- name: Prepare facts EL
  become: false
  delegate_to: localhost
  command: echo "{{ item.cmd }}" | awk '{print $2}'
  changed_when: false
  register: eldirs
  with_items: "{{ elcompare | json_query('results[*]') }}"
  when:
    - '"el" in release.stdout'
    - item.rc == 1

- name: Prepare facts Deb
  become: false
  delegate_to: localhost
  command: echo "{{ item.cmd }}" | awk '{print $2}'
  changed_when: false
  register: debdirs
  with_items: "{{ debcompare | json_query('results[*]') }}"
  when:
    - item.rc == 1
    - '"el" not in release.stdout'

- name: Prepare facts EL
  become: false
  delegate_to: localhost
  command: echo "{{ item.cmd }}" | awk '{print $3}'
  changed_when: false
  register: elrevcommit
  with_items: "{{ elcompare | json_query('results[*]') }}"
  when:
    - '"el" in release.stdout'
    - item.rc == 1

- name: Prepare facts Deb
  become: false
  delegate_to: localhost
  command: echo "{{ item.cmd }}" | awk '{print $3}'
  changed_when: false
  register: debrevcommit
  with_items: "{{ debcompare | json_query('results[*]') }}"
  when:
    - '"el" not in release.stdout'
    - item.rc == 1

- name: Adminstart EL
  become: true
  import_role:
    name: adminstart
  when: 
    - '"el" in release.stdout'
#    - elreverting is changed

- name: Adminstart Deb
  become: true
  import_role:
    name: adminstart
  when: 
    - '"el" not in release.stdout'
#    - debreverting is changed

- name: Check reverting commit changed files EL
  become: true
  shell:
    chdir: "{{ item.0 }}"
    cmd: "git show -p {{ item.1 }} | awk '/diff --git/ {print $4}' | tr '\n' ','"
  args:
    executable: /bin/bash
  changed_when: false
  failed_when: false
  register: elchangedfiles
  with_together:
    - "{{ eldirs | json_query('results[*].stdout') }}"
    - "{{ elrevcommit | json_query('results[*].stdout') }}"
  when: '"el" in release.stdout'

- name: Check reverting commit changed files Deb
  become: true
  shell:
    chdir: "{{ item.0 }}"
    cmd: "git show -p {{ item.1 }} | awk '/diff --git/ {print $4}' | tr '\n' ','"
  args:
    executable: /bin/bash
  changed_when: false
  failed_when: false
  register: debchangedfiles
  with_together:
    - "{{ debdirs | json_query('results[*].stdout') }}"
    - "{{ debrevcommit | json_query('results[*].stdout') }}"
  when: '"el" not in release.stdout'

- name: REVERT COMMIT EL
  become: true
  shell: "{{ item }}"
  args:
    executable: /bin/bash
  register: elreverted
  with_items: "{{ elreverting | json_query('results[*].stdout') }}"
  when:
    - '"el" in release.stdout'
    - item != ""

- name: REVERT COMMIT Deb
  become: true
  shell: "{{ item }}"
  args:
    executable: /bin/bash
  register: debreverted
  with_items: "{{ debreverting | json_query('results[*].stdout') }}"
  when:
    - '"el" not in release.stdout'
    - item != ""

- name: Restart services after revert EL
  become: true
  command: /usr/local/sbin/scdrm-service-restart "{{ elchangedfiles | json_query('results[*].stdout') }}"
  changed_when: false
  when: '"el" in release.stdout'

- name: Restart services after revert Deb
  become: true
  command: /usr/local/sbin/scdrm-service-restart "{{ debchangedfiles | json_query('results[*].stdout') }}"
  changed_when: false
  when: '"el" not in release.stdout'

- name: Adminstop EL
  become: true
  import_role:
    name: adminstop
  when:
    - '"el" in release.stdout'
    - elreverting is changed

- name: Adminstop Deb
  become: true
  import_role:
    name: adminstop
  when:
    - '"el" not in release.stdout'
    - debreverting is changed
...
