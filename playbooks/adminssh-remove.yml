# This playbook removes 'adminssh' from your central management jumphost
---
- name: Remove adminssh
  hosts: localhost
  gather_facts: no
  vars_files: ./vars/main.yml
  tasks:
   - name: Remove files from localhost
     become: True
     file:
       path: "{{ item }}"
       state: absent
     with_items:
       - /usr/local/bin/adminssh
       - /usr/local/bin/scdrm-commit
       - /scdrm
       - "{{ scdrm_install_dir }}/host_vars"

   - name: Remove scdrm-commit cron
     become: False
     cron:
       name: "SCDRM commit hostvars"
       minute: "1,31"
       job: /usr/local/bin/scdrm-commit
       state: absent

   - name: Setup local bashrc functions
     become: False
     blockinfile:
       path: "/home/{{ myuser }}/.bashrc"
       block: |
         function scdrm-check-change-tracking {
         cd {{ scdrm_install_dir }} > /dev/null
         ansible-playbook playbooks/change-tracking.yml -e "check=yes" | tee log/change-tracking-check-$(date '+%F-%T').log 
         }

         function scdrm-update-change-tracking {
         cd {{ scdrm_install_dir }} > /dev/null
         ansible-playbook playbooks/change-tracking.yml -e "update=yes" | tee log/change-tracking-update-$(date '+%F-%T').log 
         }

         function scdrm-enforce-consistency {
         cd {{ scdrm_install_dir }} > /dev/null
         ansible-playbook playbooks/consistency-enforce.yml | tee log/consistency-enforce-$(date '+%F-%T').log 
         }

         function scdrm-config-update {
         cd {{ scdrm_install_dir }} > /dev/null
         ansible-playbook playbooks/scdrm.yml -e "update=yes" | tee log/update-config-$(date '+%F-%T').log 
         }

         function scdrm-config-update--dryrun-off {
         cd {{ scdrm_install_dir }} > /dev/null
         ansible-playbook playbooks/switch-dryrun-mode.yml -e "dryrun=0" | tee log/update-config--dryrun-off-$(date '+%F-%T').log 
         }

         function scdrm-config-update--dryrun-on {
         cd {{ scdrm_install_dir }} > /dev/null
         ansible-playbook playbooks/switch-dryrun-mode.yml -e "dryrun=1" | tee log/update-config--dryrun-on-$(date '+%F-%T').log 
         }

         function scdrm-remove {
         cd {{ scdrm_install_dir }} > /dev/null
         if [[ $# -ne 1 ]]
         then printf 'Please provide a servername for removal.\nExiting.\n\n'
         return 1
         fi
         ansible-playbook playbooks/scdrm.yml -e "remove=yes" -l $1 | tee log/remove-$(date '+%F-%T').log  
         }

         function scdrm-remove-all {
         cd {{ scdrm_install_dir }} > /dev/null
         ansible-playbook playbooks/scdrm.yml -e "remove=yes" | tee log/remove-$(date '+%F-%T').log  
         }

         function scdrm-install {
         cd {{ scdrm_install_dir }} > /dev/null
         if [[ $# -ne 1 ]]
         then printf 'Please provide a servername for installation.\nExiting.\n\n'
         return 1
         fi
         ansible-playbook playbooks/scdrm.yml -l $1 | tee log/install-$(date '+%F-%T').log 
         }

         function scdrm-install-from-list {
         cd {{ scdrm_install_dir }} > /dev/null
         if [[ $# -ne 1 || ! -s $1 ]]
         then printf 'Provided inventory list is empty or does not exist!\nExiting.\n\n'
         return 1
         fi
         ansible-playbook playbooks/scdrm.yml -i $1 | tee log/install-$(date '+%F-%T').log 
         }
       marker: "##<!-- ANSIBLE MANAGED BLOCK -->"
       state: absent
...
