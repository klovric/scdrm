# This playbook installs 'adminssh' onto your central management jumphost and a cron job
---
- name: Install adminssh
  hosts: localhost
  gather_facts: no
  vars_files: ./vars/main.yml
  roles:
    - role: get_kernel
    - { role: skip_host, when: '"el6" in release.stdout' }
  tasks:
   - name: Copy adminssh
     become: True
     template:
       src: ../roles/scdrm/files/adminssh.j2
       dest: /usr/local/bin/adminssh
       mode: '0755'
       owner: root

   - name: Copy commit-hostvars
     become: True
     template:
       src: ../roles/scdrm/files/commit-hostvars.j2
       dest: /usr/local/bin/scdrm-commit
       mode: '0755'
       owner: root

   - name: Setup scdrm-commit cron
     become: False
     cron:
       name: "SCDRM commit hostvars"
       minute: "1,31"
       job: /usr/local/bin/scdrm-commit
       state: present

   - name: Setup local bashrc functions
     become: False
     blockinfile:
       path: "/home/{{ myuser }}/.bashrc"
       block: |
         function scdrm-change-tracking_check {
         cd {{ scdrm_install_dir }} > /dev/null
         ansible-playbook playbooks/change-tracking.yml -e "check=yes" | tee log/change-tracking-check-$(date '+%F-%T').log
         }
         function scdrm-change-tracking_update {
         cd {{ scdrm_install_dir }} > /dev/null
         ansible-playbook playbooks/change-tracking.yml -e "update=yes" | tee log/change-tracking-update-$(date '+%F-%T').log
         }
         function scdrm-consistency-enforce {
         cd {{ scdrm_install_dir }} > /dev/null
         ansible-playbook playbooks/consistency-enforce.yml | tee log/consistency-enforce-$(date '+%F-%T').log
         }
         function scdrm-update-config {
         cd {{ scdrm_install_dir }} > /dev/null
         ansible-playbook playbooks/scdrm.yml -e "update=yes" | tee log/update-config-$(date '+%F-%T').log
         }
         function scdrm-update-config--dryrun-off {
         cd {{ scdrm_install_dir }} > /dev/null
         ansible-playbook playbooks/scdrm.yml -e "update=yes dryrun=0" | tee log/update-config--dryrun-off-$(date '+%F-%T').log
         }
         function scdrm-update-config--dryrun-on {
         cd {{ scdrm_install_dir }} > /dev/null
         ansible-playbook playbooks/scdrm.yml -e "update=yes dryrun=1" | tee log/update-config--dryrun-on-$(date '+%F-%T').log
         }
       marker: "##<!-- ANSIBLE MANAGED BLOCK -->"
       state: present
...
